.coolTechBg {
  position: fixed;
  bottom: 0;
  right: 0;
  min-width: 100%;
  min-height: 100%;
  background: rgb(2, 0, 36);
}

.coolTech {
  font-family: monospace;
  padding: 15px;
  position: fixed;
  z-index: 7;
  overflow-y: auto;
  background: linear-gradient(
    90deg,
    rgba(193, 245, 214, 0.1) 0%,
    rgba(50, 199, 204, 0.2) 35%,
    rgba(0, 144, 173, 0.2) 100%
  ) !important;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

.crtLines {
  position: relative;
}

.crtLines::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  min-width: 100%;
  min-height: 100%;
  background: -webkit-repeating-linear-gradient(
      left,
      rgba(255, 0, 0, 0.08) 0.01px 1px,
      rgba(0, 255, 0, 0.08) 1px 2px,
      rgba(0, 0, 255, 0.08) 2px 3px
    ),
    -webkit-repeating-linear-gradient(bottom, transparent 0.001px 1px, rgba(
            0,
            0,
            0,
            0.4
          )
          1px 2px) !important;
}

.terminalBox {
  color: rgb(153 218 175);
  border: solid 1px rgb(153 218 175);
  background-color: rgb(0, 0, 0, 0.6);
  position: relative;
  box-shadow: 7px 7px 0px rgba(0, 0, 0, 0.283);
  backdrop-filter: blur(6px);
  max-height: 79vh;
  overflow-y: auto;
  overflow-x: hidden;
}

.terminalBoxItem {
  padding: 15px;
  font-size: 22px;
  font-weight: bold;
  border-bottom: solid 1px rgb(153, 218, 175, 0.8);
}

.terminalBoxItem:hover {
  background: rgb(153, 218, 175, 0.8);
  color: rgb(0, 0, 0);
}

.terminalBoxHeader {
  background: rgb(153, 218, 175, 0.8);
  min-height: 20px;
  font-weight: 800;
}

.text {
  position: relative;
  display: inline-block;
}

.text::after {
  content: "_";
  position: absolute;
  top: 0px;
  right: -10px;
  /* Remove display: inline-block if not required to be on the same line as text etc */
  display: inline-block;
  /* background-color: #8e8e8e; */
  vertical-align: top;
  /* width: 10px; */
  /* Set height to the line height of .text */
  /* height: 24px; */
  /* 
  Animation paramaters:
  blink = animation-name, 
  1s = animation-duration, 
  step-end = animation-timing-function,
  infinite = animation-iteration-count
  */
  -webkit-animation: blink 1s step-end infinite;
  animation: blink 1s step-end infinite;
}

@-webkit-keyframes blink {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes blink {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.commandInput {
  /* Resetting margins and padding */
  margin: 0;
  padding: 5px 0 5px 20px;

  border: 0;

  /* Resetting font styles */
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  width: 95%;

  /* Resetting background and text colors */
  background-color: transparent;
  color: inherit;

  /* Resetting outline */
  outline: none; /* Note: This removes the outline on focus, consider adding a custom focus style */

  /* Resetting box-sizing */
  box-sizing: border-box;

  /* Resetting other styles */
  /* Add any other specific styles you want to reset */
}

.mainContent {
  height: 95vh;
}

@media only screen and (max-width: 600px) {
  .mainContent {
    height: 100%;
  }
  .terminalInputBox {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 10;
  }
}
